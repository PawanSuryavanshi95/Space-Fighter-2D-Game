
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.HttpURLConnection;
import java.net.URL;
import java.net.URLConnection;
import java.nio.charset.StandardCharsets;
import javax.swing.JLabel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author pawan
 */
public class GameOver extends javax.swing.JFrame {

    /**
     * Creates new form GameOver
     */
    private int score, kills, highScore = Integer.MAX_VALUE;
    private String name;
    private static final Object[] columnNames = {"Id", "Rank", "Name", "Score", "Kills"};
    private static final Object[][] rowData = {};
    private final String ENDPOINT = "http://localhost:5000/";
    
    public GameOver(int score, int kills, String name) {
        initComponents();
        
        this.score = score;
        this.kills = kills;
        this.name = name;
        
        this.jLabel2.setText(this.jLabel2.getText() + String.valueOf(score));
        this.setBounds(0, 0, 1000, 670);
        this.setMaximumSize(new Dimension(1000,670));
        this.setMinimumSize(new Dimension(1000,670));
        this.setLocationRelativeTo(null);
        this.play.setBackground( new Color(255, 255, 255, 255) );
        this.setResizable(false);
        
        DefaultTableModel listTableModel = new DefaultTableModel(rowData, columnNames);
        this.jTable1.setModel(listTableModel);
        this.jTable1.getTableHeader().setFont(new Font("Segoe UI", Font.BOLD, 12));
        this.jTable1.getTableHeader().setOpaque(false);
        this.jTable1.getTableHeader().setBackground(new Color(230, 219, 255));
        this.jTable1.getTableHeader().setForeground(new Color(47,39,66));
        this.jTable1.setRowHeight(25);
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment( JLabel.CENTER );
        this.jTable1.getColumnModel().getColumn(0).setCellRenderer( centerRenderer );
        
        getScores();
        
        if(highScore<score){
            uploadData();
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    private void uploadData(){
        try{
            URL url = new URL(ENDPOINT+"upload");
            URLConnection con = url.openConnection();
            HttpURLConnection http = (HttpURLConnection)con;
            http.setRequestMethod("POST");
            http.setDoOutput(true);
            
            String data = "{\"score\":\"" + Integer.toString(score) + "\",\"kills\":\"" + Integer.toString(kills) + "\",\"name\":\"" + name + "\"" + "}";
            byte[] out = data.toString().getBytes(StandardCharsets.UTF_8);
            System.out.println(data);
            int length = out.length;
            
            http.setFixedLengthStreamingMode(length);
            http.setRequestProperty("Content-Type", "application/json; charset=UTF-8");
            http.connect();
            try(OutputStream os = http.getOutputStream()) {
                os.write(out);
            }
        }
        catch(Exception e){
            e.printStackTrace();
        }
    }
    
    private void getScores(){
        try{
            URL url = new URL(ENDPOINT+"highscores");
            HttpURLConnection con = (HttpURLConnection) url.openConnection();
            con.setRequestMethod("GET");
            int responseCode = con.getResponseCode();
            System.out.println("GET Response Code :: " + responseCode);
            if (responseCode == HttpURLConnection.HTTP_OK) { // success
                BufferedReader in = new BufferedReader(new InputStreamReader(con.getInputStream()));
                String inputLine;
                StringBuffer response = new StringBuffer();

                while ((inputLine = in.readLine()) != null) {
                        response.append(inputLine);
                }
                in.close();

                String[] data = response.toString().split("#");
                DefaultTableModel listTableModel = new DefaultTableModel(rowData, columnNames);
                
                //highScore = Integer.parseInt(data[data.length-1]);

                for (int i=0;i<(data.length);i++) {
                    String[] values = data[i].split(";");
                    listTableModel.addRow(new Object[]{"none",i+1, values[2], values[0], values[1]});
                }

                this.jTable1.setModel(listTableModel);
            }
            else{
                System.out.println("GET request not worked");
            }
        }
        catch(Exception e){
            e.printStackTrace();
        }
    }
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        play = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(47, 39, 66));
        setMaximumSize(new java.awt.Dimension(418, 337));
        setMinimumSize(new java.awt.Dimension(418, 337));
        setPreferredSize(new java.awt.Dimension(418, 337));

        jPanel2.setBackground(new java.awt.Color(47, 39, 66));
        jPanel2.setMaximumSize(new java.awt.Dimension(460, 408));
        jPanel2.setMinimumSize(new java.awt.Dimension(460, 408));
        jPanel2.setPreferredSize(new java.awt.Dimension(460, 408));
        jPanel2.setLayout(null);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 45)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Score : ");
        jPanel2.add(jLabel2);
        jLabel2.setBounds(300, 160, 220, 55);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 65)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Game Over");
        jPanel2.add(jLabel1);
        jLabel1.setBounds(330, 20, 360, 80);
        jPanel2.add(jSeparator1);
        jSeparator1.setBounds(10, 117, 1000, 7);

        play.setFont(new java.awt.Font("Tahoma", 0, 28)); // NOI18N
        play.setText("Play Again");
        play.setDoubleBuffered(true);
        play.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                playMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                playMouseEntered(evt);
            }
        });
        play.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playActionPerformed(evt);
            }
        });
        jPanel2.add(play);
        play.setBounds(660, 150, 180, 70);

        jScrollPane1.setFocusable(false);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.setFocusable(false);
        jTable1.setGridColor(new java.awt.Color(204, 204, 204));
        jTable1.setRowHeight(25);
        jTable1.setSelectionBackground(new java.awt.Color(137, 115, 189));
        jTable1.setShowVerticalLines(false);
        jTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTable1);

        jPanel2.add(jScrollPane1);
        jScrollPane1.setBounds(220, 270, 580, 320);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 1030, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 650, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 14, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void playMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_playMouseEntered

    }//GEN-LAST:event_playMouseEntered

    private void playMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_playMouseExited

    }//GEN-LAST:event_playMouseExited

    private void playActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playActionPerformed
        this.dispose();
        Game game = new Game("Space Fighter",550,750,150);
        game.start();
    }//GEN-LAST:event_playActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GameOver.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GameOver.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GameOver.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GameOver.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GameOver(0,0,"Dohn Joe").setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton play;
    // End of variables declaration//GEN-END:variables
}